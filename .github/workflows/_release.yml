name: Build Release
on:
  workflow_call:
    inputs:
      bundle:
        description: "The target bundle"
        required: true
        type: string
      runsOn:
        description: "The host to run on"
        required: true
        type: string

jobs:
  build:
    name: Release ${{ inputs.bundle }} binaries
    runs-on: ${{ inputs.runsOn }}
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: ${{ env.nix_conf }}
      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: release-${{ runner.os }}-${{ hashFiles('Cargo.lock', '**/Cargo.toml', 'flake.nix', 'flake.lock', 'rust-toolchain.toml') }}
          restore-prefixes-first-match: |
            release-${{ runner.os }}-
            build-${{ runner.os }}-
          purge: true
          purge-prefixes: release-${{ runner.os }}-
          purge-created: 0
          purge-primary-key: never
          gc-max-store-size: 5G

      - name: Build binaries
        run: nix build .#${{ inputs.bundle }}-release-bundle

      - name: Upload release artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: result/bin/*

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: "result/bin/*"
